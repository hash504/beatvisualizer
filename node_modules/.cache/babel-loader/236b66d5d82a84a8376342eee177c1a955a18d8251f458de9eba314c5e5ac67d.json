{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bryce\\\\beatvisualizer\\\\src\\\\Metronome\\\\Metronome.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from \"react\";\nimport \"./Metronome.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Metronome = _ref => {\n  _s();\n  let {\n    initialBpm,\n    initialDelay\n  } = _ref;\n  const [bpm, setBpm] = useState();\n  const [delay, setDelay] = useState();\n  const handleBpmChange = useCallback(event => {\n    setBpm(event.target.value);\n  });\n  const submitBpmChange = useCallback(() => {\n    initialBpm(bpm);\n  }, []);\n  const handleDelayChange = useCallback(event => {\n    setDelay(event.target.value);\n  });\n  const submitDelayChange = useCallback(() => {\n    initialDelay(delay);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metronome0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"settings\",\n        className: \"text\",\n        placeholder: \"Insert BPM...\",\n        onchange: handleBpmChange,\n        onsubmit: submitBpmChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"settings\",\n        className: \"text\",\n        placeholder: \"Insert delay (MS)...\",\n        onchange: handleDelayChange,\n        onsubmit: submitDelayChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(Metronome, \"hb8U9lWPg26fDtGWEstPdyFaHy0=\");\n_c = Metronome;\nexport default Metronome;\nvar _c;\n$RefreshReg$(_c, \"Metronome\");","map":{"version":3,"names":["React","useState","useCallback","jsxDEV","_jsxDEV","Metronome","_ref","_s","initialBpm","initialDelay","bpm","setBpm","delay","setDelay","handleBpmChange","event","target","value","submitBpmChange","handleDelayChange","submitDelayChange","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","placeholder","onchange","onsubmit","_c","$RefreshReg$"],"sources":["C:/Users/bryce/beatvisualizer/src/Metronome/Metronome.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport \"./Metronome.css\";\r\n\r\nconst Metronome = ({ initialBpm, initialDelay }) => {\r\n    const [bpm, setBpm] = useState();\r\n    const [delay, setDelay] = useState();\r\n\r\n\r\n    const handleBpmChange = useCallback((event) => {\r\n        setBpm(event.target.value);\r\n    });\r\n\r\n    const submitBpmChange = useCallback(() => {\r\n        initialBpm(bpm);\r\n    }, []);\r\n\r\n    const handleDelayChange = useCallback((event) => {\r\n        setDelay(event.target.value);\r\n    });\r\n\r\n    const submitDelayChange = useCallback(() => {\r\n        initialDelay(delay);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <div className='metronome0' />\r\n            <div className='settings'>\r\n                <input id=\"settings\" className=\"text\" placeholder='Insert BPM...' onchange={handleBpmChange} onsubmit={submitBpmChange}/>\r\n                <input id=\"settings\" className=\"text\" placeholder='Insert delay (MS)...' onchange={handleDelayChange} onsubmit={submitDelayChange}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Metronome;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACpD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGC,IAAA,IAAkC;EAAAC,EAAA;EAAA,IAAjC;IAAEC,UAAU;IAAEC;EAAa,CAAC,GAAAH,IAAA;EAC3C,MAAM,CAACI,GAAG,EAAEC,MAAM,CAAC,GAAGV,QAAQ,EAAE;EAChC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,EAAE;EAGpC,MAAMa,eAAe,GAAGZ,WAAW,CAAEa,KAAK,IAAK;IAC3CJ,MAAM,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC,CAAC;EAEF,MAAMC,eAAe,GAAGhB,WAAW,CAAC,MAAM;IACtCM,UAAU,CAACE,GAAG,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,iBAAiB,GAAGjB,WAAW,CAAEa,KAAK,IAAK;IAC7CF,QAAQ,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC,CAAC;EAEF,MAAMG,iBAAiB,GAAGlB,WAAW,CAAC,MAAM;IACxCO,YAAY,CAACG,KAAK,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIR,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAKkB,SAAS,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC9BtB,OAAA;MAAKkB,SAAS,EAAC,UAAU;MAAAD,QAAA,gBACrBjB,OAAA;QAAOuB,EAAE,EAAC,UAAU;QAACL,SAAS,EAAC,MAAM;QAACM,WAAW,EAAC,eAAe;QAACC,QAAQ,EAAEf,eAAgB;QAACgB,QAAQ,EAAEZ;MAAgB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eACzHtB,OAAA;QAAOuB,EAAE,EAAC,UAAU;QAACL,SAAS,EAAC,MAAM;QAACM,WAAW,EAAC,sBAAsB;QAACC,QAAQ,EAAEV,iBAAkB;QAACW,QAAQ,EAAEV;MAAkB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd,CAAC;AAAAnB,EAAA,CA9BKF,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AAgCf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}