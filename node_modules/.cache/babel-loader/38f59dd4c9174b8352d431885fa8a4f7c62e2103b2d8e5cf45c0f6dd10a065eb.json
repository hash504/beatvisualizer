{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bryce\\\\beatvisualizer\\\\src\\\\Metronome\\\\Metronome.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport \"./Metronome.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Metronome = _ref => {\n  _s();\n  let {\n    initialBpm,\n    initialDelay\n  } = _ref;\n  const [bpm, setBpm] = useState();\n  const [delay, setDelay] = useState();\n  const handleBpmChange = useCallback(event => {\n    setBpm(event.target.value);\n  });\n  const submitBpmChange = useCallback(() => {\n    initialBpm(bpm);\n  }, [initialBpm, bpm]);\n  const handleDelayChange = useCallback(event => {\n    setDelay(event.target.value);\n  });\n  const submitDelayChange = useCallback(() => {\n    initialDelay(delay);\n  }, [initialDelay, delay]);\n  let metronomeIndex = 0;\n  const interval = 60000 / bpm;\n  const startMetronome = () => {\n    setInterval(() => {\n      if (metronomeIndex > 3) {\n        metronomeIndex = 1;\n      }\n      metronomeIndex++;\n      console.log(metronomeIndex);\n    }, interval);\n  };\n  const stopMetronome = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ControlButtons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"PlayButton\",\n        onClick: startMetronome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"StopButton\",\n        className: stopMetronome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 67\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `metronome${metronomeIndex}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"settings\",\n          className: \"text\",\n          placeholder: \"Insert BPM...\",\n          onChange: handleBpmChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text\",\n          id: \"settingbutton\",\n          onClick: submitBpmChange,\n          children: \"Set\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 115\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"settings\",\n          className: \"text\",\n          placeholder: \"Insert delay (MS)...\",\n          onChange: handleDelayChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text\",\n          id: \"settingbutton\",\n          onClick: submitDelayChange,\n          children: \"Set\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 124\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Metronome, \"hb8U9lWPg26fDtGWEstPdyFaHy0=\");\n_c = Metronome;\nexport default Metronome;\nvar _c;\n$RefreshReg$(_c, \"Metronome\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","jsxDEV","_jsxDEV","Metronome","_ref","_s","initialBpm","initialDelay","bpm","setBpm","delay","setDelay","handleBpmChange","event","target","value","submitBpmChange","handleDelayChange","submitDelayChange","metronomeIndex","interval","startMetronome","setInterval","console","log","stopMetronome","children","className","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Users/bryce/beatvisualizer/src/Metronome/Metronome.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\r\nimport \"./Metronome.css\";\r\n\r\nconst Metronome = ({ initialBpm, initialDelay }) => {\r\n    const [bpm, setBpm] = useState();\r\n    const [delay, setDelay] = useState();\r\n\r\n    const handleBpmChange = useCallback((event) => {\r\n        setBpm(event.target.value);\r\n    });\r\n\r\n    const submitBpmChange = useCallback(() => {\r\n        initialBpm(bpm);\r\n    }, [initialBpm, bpm]);\r\n\r\n    const handleDelayChange = useCallback((event) => {\r\n        setDelay(event.target.value);\r\n    });\r\n\r\n    const submitDelayChange = useCallback(() => {\r\n        initialDelay(delay);\r\n    }, [initialDelay, delay]);\r\n\r\n    let metronomeIndex = 0;\r\n    const interval = 60000 / bpm;\r\n    const startMetronome = () => {\r\n        setInterval(() => {\r\n            if (metronomeIndex > 3) {\r\n                metronomeIndex = 1;\r\n            }\r\n            metronomeIndex++;\r\n            console.log(metronomeIndex);\r\n        }, interval);\r\n    }\r\n\r\n    const stopMetronome = () => {\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"ControlButtons\">\r\n                <button id=\"PlayButton\" onClick={startMetronome}/><button id=\"StopButton\" className={stopMetronome}/>\r\n            </div>\r\n            <div className={`metronome${metronomeIndex}`} />\r\n            <div className='settings'>\r\n                <div>\r\n                    <input id=\"settings\" className=\"text\" placeholder='Insert BPM...' onChange={handleBpmChange}/><button className=\"text\" id=\"settingbutton\" onClick={submitBpmChange}>Set</button>\r\n                </div>\r\n                <div>\r\n                    <input id=\"settings\" className=\"text\" placeholder='Insert delay (MS)...' onChange={handleDelayChange}/><button className=\"text\" id=\"settingbutton\" onClick={submitDelayChange}>Set</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Metronome;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}