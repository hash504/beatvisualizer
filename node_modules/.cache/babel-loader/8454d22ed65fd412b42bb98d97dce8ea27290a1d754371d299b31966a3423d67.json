{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bryce\\\\beatvisualizer\\\\src\\\\Spotify\\\\Spotify.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { Buffer } from 'buffer';\nimport axios from 'axios';\nimport \"./Spotify.css\";\n\n/*\r\nThis entire file is a work in progress. Sometime in the future i will add functionality of searching Spotify via an API request.\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst redirectUri = 'http://localhost:3000/';\nconst Spotify = _ref => {\n  _s();\n  let {\n    onSearch,\n    searchTerm\n  } = _ref;\n  const clientId = \"3b34a668dafb405292e73bed43f382d1\";\n  const clientSecret = \"91e1d6b99541441e9774a89b6058a3f3\";\n  const [term, setTerm] = useState(\"\");\n  const handleTermChange = useCallback(event => {\n    setTerm(event.target.value);\n  }, []);\n  const [token, setToken] = useState('');\n  const resultsData = {\n    title: [],\n    artist: [],\n    tempo: []\n  };\n  useEffect(() => {\n    axios(\"https://accounts.spotify.com/api/token\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Authorization': 'Basic ' + btoa(clientId + ':' + clientSecret)\n      },\n      data: 'grant_type=client_credentials'\n    }).then(tokenResponse => {\n      console.log(tokenResponse.data.access_token);\n      setToken(tokenResponse.data.access_token);\n    });\n  }, []);\n  var example;\n  const searchResults = useCallback(() => {\n    onSearch(term);\n    const newTerm = term.replace(/ /g, \"+\");\n    setTerm(newTerm);\n    getResults();\n  }, [onSearch, term]);\n  const getResults = () => {\n    axios(`https://api.spotify.com/v1/search?q=${term}&type=track&limit=5`, {\n      // Green Day is example term, remember to change to term\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(searchResults => {\n      console.log(searchResults);\n      resultsData.title = searchResults.data.tracks.items.map(track => track.name);\n      resultsData.artist = searchResults.data.tracks.items.map(track => track.artists[0].name);\n    });\n    console.log(resultsData);\n  };\n  var results =\n  /*#__PURE__*/\n  // Before searching, results will be an empty JSX element\n  _jsxDEV(\"div\", {\n    id: \"SearchResults\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"Table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text\",\n            id: \"SongText\",\n            children: \"Song Name - Artist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text\",\n            id: \"BpmText\",\n            children: \"BPM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text\",\n            id: \"SongText\",\n            children: [resultsData.title[0], \" - \", resultsData.artist[0]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text\",\n            id: \"BpmText\",\n            children: resultsData.tempo[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text\",\n            id: \"SongTextBottom\",\n            children: [resultsData.title[1], \" - \", resultsData.artist[1]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text\",\n            id: \"BpmTextBottom\",\n            children: resultsData.tempo[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"SearchBar\",\n        className: \"text\",\n        placeholder: \"Search Spotify...\",\n        onChange: handleTermChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"SearchButton\",\n        onClick: searchResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), results]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n};\n_s(Spotify, \"I9XP3IN/YLjBYkkdMQ4gHik+SEM=\");\n_c = Spotify;\nexport default Spotify;\nvar _c;\n$RefreshReg$(_c, \"Spotify\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","Buffer","axios","jsxDEV","_jsxDEV","redirectUri","Spotify","_ref","_s","onSearch","searchTerm","clientId","clientSecret","term","setTerm","handleTermChange","event","target","value","token","setToken","resultsData","title","artist","tempo","method","headers","btoa","data","then","tokenResponse","console","log","access_token","example","searchResults","newTerm","replace","getResults","tracks","items","map","track","name","artists","results","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/bryce/beatvisualizer/src/Spotify/Spotify.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Buffer } from 'buffer';\r\nimport axios from 'axios';\r\nimport \"./Spotify.css\"\r\n\r\n/*\r\nThis entire file is a work in progress. Sometime in the future i will add functionality of searching Spotify via an API request.\r\n*/\r\n\r\nconst redirectUri = 'http://localhost:3000/';\r\n\r\nconst Spotify = ({ onSearch, searchTerm }) => {\r\n\r\n    const clientId = \"3b34a668dafb405292e73bed43f382d1\";\r\n    const clientSecret = \"91e1d6b99541441e9774a89b6058a3f3\";\r\n\r\n    const [term, setTerm] = useState(\"\");\r\n\r\n    const handleTermChange = useCallback((event) => {\r\n        setTerm(event.target.value);\r\n        \r\n    }, [])\r\n\r\n    const [token, setToken] = useState(''); \r\n    const resultsData = {\r\n        title: [],\r\n        artist: [],\r\n        tempo: [],\r\n    };\r\n\r\n    useEffect(() => {\r\n        axios(\"https://accounts.spotify.com/api/token\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type' : 'application/x-www-form-urlencoded',\r\n                'Authorization' : 'Basic ' + btoa(clientId + ':' + clientSecret)\r\n            },\r\n            data: 'grant_type=client_credentials'\r\n        })\r\n        .then(tokenResponse => {\r\n            console.log(tokenResponse.data.access_token);\r\n            setToken(tokenResponse.data.access_token);\r\n        })\r\n    }, []);\r\n\r\n\r\n    var example;\r\n\r\n    const searchResults = useCallback(() => {\r\n        onSearch(term);\r\n        const newTerm = term.replace(/ /g, \"+\");\r\n        setTerm(newTerm);\r\n        getResults();\r\n    }, [onSearch, term]);\r\n\r\n    const getResults = () => {\r\n        axios(`https://api.spotify.com/v1/search?q=${term}&type=track&limit=5`, { // Green Day is example term, remember to change to term\r\n            method: 'GET',\r\n            headers: { 'Authorization' : 'Bearer ' + token},\r\n        })\r\n        .then(searchResults => {\r\n            console.log(searchResults);\r\n            resultsData.title = searchResults.data.tracks.items.map(track => track.name);\r\n            resultsData.artist = searchResults.data.tracks.items.map(track => track.artists[0].name);\r\n        })\r\n\r\n        console.log(resultsData);\r\n    }\r\n\r\n    \r\n\r\n    var results = ( // Before searching, results will be an empty JSX element\r\n        <div id=\"SearchResults\">\r\n            <table id=\"Table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"text\" id=\"SongText\">Song Name - Artist</th>\r\n                        <th className=\"text\" id=\"BpmText\">BPM</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {/* Find a way to make a loop so that i don't have to paste each JSX element indivudually */}\r\n                    <tr> \r\n                        <td className=\"text\" id=\"SongText\">{resultsData.title[0]} - {resultsData.artist[0]}</td>\r\n                        <td className=\"text\" id=\"BpmText\">{resultsData.tempo[0]}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td className=\"text\" id=\"SongTextBottom\">{resultsData.title[1]} - {resultsData.artist[1]}</td>\r\n                        <td className=\"text\" id=\"BpmTextBottom\">{resultsData.tempo[1]}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n    \r\n    \r\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"SearchBar\">\r\n                <h2></h2>\r\n                <input id=\"SearchBar\" className=\"text\" placeholder=\"Search Spotify...\" onChange={handleTermChange}/>\r\n                <button id=\"SearchButton\" onClick={searchResults}></button>\r\n            </div>\r\n            {results}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spotify;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAC/D,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;;AAEtB;AACA;AACA;AAFA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,WAAW,GAAG,wBAAwB;AAE5C,MAAMC,OAAO,GAAGC,IAAA,IAA8B;EAAAC,EAAA;EAAA,IAA7B;IAAEC,QAAQ;IAAEC;EAAW,CAAC,GAAAH,IAAA;EAErC,MAAMI,QAAQ,GAAG,kCAAkC;EACnD,MAAMC,YAAY,GAAG,kCAAkC;EAEvD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMiB,gBAAgB,GAAGhB,WAAW,CAAEiB,KAAK,IAAK;IAC5CF,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAE/B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMuB,WAAW,GAAG;IAChBC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE;EACX,CAAC;EAEDxB,SAAS,CAAC,MAAM;IACZE,KAAK,CAAC,wCAAwC,EAAE;MAC5CuB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAG,mCAAmC;QACpD,eAAe,EAAG,QAAQ,GAAGC,IAAI,CAAChB,QAAQ,GAAG,GAAG,GAAGC,YAAY;MACnE,CAAC;MACDgB,IAAI,EAAE;IACV,CAAC,CAAC,CACDC,IAAI,CAACC,aAAa,IAAI;MACnBC,OAAO,CAACC,GAAG,CAACF,aAAa,CAACF,IAAI,CAACK,YAAY,CAAC;MAC5Cb,QAAQ,CAACU,aAAa,CAACF,IAAI,CAACK,YAAY,CAAC;IAC7C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAGN,IAAIC,OAAO;EAEX,MAAMC,aAAa,GAAGpC,WAAW,CAAC,MAAM;IACpCU,QAAQ,CAACI,IAAI,CAAC;IACd,MAAMuB,OAAO,GAAGvB,IAAI,CAACwB,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;IACvCvB,OAAO,CAACsB,OAAO,CAAC;IAChBE,UAAU,EAAE;EAChB,CAAC,EAAE,CAAC7B,QAAQ,EAAEI,IAAI,CAAC,CAAC;EAEpB,MAAMyB,UAAU,GAAGA,CAAA,KAAM;IACrBpC,KAAK,CAAE,uCAAsCW,IAAK,qBAAoB,EAAE;MAAE;MACtEY,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QAAE,eAAe,EAAG,SAAS,GAAGP;MAAK;IAClD,CAAC,CAAC,CACDU,IAAI,CAACM,aAAa,IAAI;MACnBJ,OAAO,CAACC,GAAG,CAACG,aAAa,CAAC;MAC1Bd,WAAW,CAACC,KAAK,GAAGa,aAAa,CAACP,IAAI,CAACW,MAAM,CAACC,KAAK,CAACC,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC;MAC5EtB,WAAW,CAACE,MAAM,GAAGY,aAAa,CAACP,IAAI,CAACW,MAAM,CAACC,KAAK,CAACC,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC,CAACD,IAAI,CAAC;IAC5F,CAAC,CAAC;IAEFZ,OAAO,CAACC,GAAG,CAACX,WAAW,CAAC;EAC5B,CAAC;EAID,IAAIwB,OAAO;EAAA;EAAK;EACZzC,OAAA;IAAK0C,EAAE,EAAC,eAAe;IAAAC,QAAA,eACnB3C,OAAA;MAAO0C,EAAE,EAAC,OAAO;MAAAC,QAAA,gBACb3C,OAAA;QAAA2C,QAAA,eACI3C,OAAA;UAAA2C,QAAA,gBACI3C,OAAA;YAAI4C,SAAS,EAAC,MAAM;YAACF,EAAE,EAAC,UAAU;YAAAC,QAAA,EAAC;UAAkB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,eAC1DhD,OAAA;YAAI4C,SAAS,EAAC,MAAM;YAACF,EAAE,EAAC,SAAS;YAAAC,QAAA,EAAC;UAAG;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACzC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACD,eACRhD,OAAA;QAAA2C,QAAA,gBAEI3C,OAAA;UAAA2C,QAAA,gBACI3C,OAAA;YAAI4C,SAAS,EAAC,MAAM;YAACF,EAAE,EAAC,UAAU;YAAAC,QAAA,GAAE1B,WAAW,CAACC,KAAK,CAAC,CAAC,CAAC,EAAC,KAAG,EAACD,WAAW,CAACE,MAAM,CAAC,CAAC,CAAC;UAAA;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM,eACxFhD,OAAA;YAAI4C,SAAS,EAAC,MAAM;YAACF,EAAE,EAAC,SAAS;YAAAC,QAAA,EAAE1B,WAAW,CAACG,KAAK,CAAC,CAAC;UAAC;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC5D,eACLhD,OAAA;UAAA2C,QAAA,gBACI3C,OAAA;YAAI4C,SAAS,EAAC,MAAM;YAACF,EAAE,EAAC,gBAAgB;YAAAC,QAAA,GAAE1B,WAAW,CAACC,KAAK,CAAC,CAAC,CAAC,EAAC,KAAG,EAACD,WAAW,CAACE,MAAM,CAAC,CAAC,CAAC;UAAA;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM,eAC9FhD,OAAA;YAAI4C,SAAS,EAAC,MAAM;YAACF,EAAE,EAAC,eAAe;YAAAC,QAAA,EAAE1B,WAAW,CAACG,KAAK,CAAC,CAAC;UAAC;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAClE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEf;EAUD,oBACIhD,OAAA;IAAA2C,QAAA,gBACI3C,OAAA;MAAK4C,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACtB3C,OAAA;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACThD,OAAA;QAAO0C,EAAE,EAAC,WAAW;QAACE,SAAS,EAAC,MAAM;QAACK,WAAW,EAAC,mBAAmB;QAACC,QAAQ,EAAEvC;MAAiB;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eACpGhD,OAAA;QAAQ0C,EAAE,EAAC,cAAc;QAACS,OAAO,EAAEpB;MAAc;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAU;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzD,EACLP,OAAO;EAAA;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACN;AAEd,CAAC;AAAA5C,EAAA,CAtGKF,OAAO;AAAAkD,EAAA,GAAPlD,OAAO;AAwGb,eAAeA,OAAO;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}