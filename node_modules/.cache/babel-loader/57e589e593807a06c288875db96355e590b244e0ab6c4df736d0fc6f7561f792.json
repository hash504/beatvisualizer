{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bryce\\\\beatvisualizer\\\\src\\\\Metronome\\\\Metronome.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport \"./Metronome.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Metronome = _ref => {\n  _s();\n  let {\n    initialBpm,\n    initialDelay\n  } = _ref;\n  const [bpm, setBpm] = useState(120);\n  const [delay, setDelay] = useState();\n  const [metronome, setMetronome] = useState(0);\n  const handleBpmChange = useCallback(event => {\n    setBpm(event.target.value);\n  });\n  const submitBpmChange = useCallback(() => {\n    initialBpm(bpm);\n  }, [initialBpm, bpm]);\n  const handleDelayChange = useCallback(event => {\n    setDelay(event.target.value);\n  });\n  const submitDelayChange = useCallback(() => {\n    initialDelay(delay);\n  }, [initialDelay, delay]);\n  let metronomeIndex = 0;\n  const interval = 60000 / bpm;\n  let isRunning;\n  let metronomeInterval;\n  function setMetronomeInterval() {\n    metronomeInterval = setInterval(startMetronome, interval);\n  }\n  const startMetronome = () => {\n    if (metronomeIndex >= 4) {\n      metronomeIndex = 0;\n    }\n    metronomeIndex++;\n    console.log(metronomeIndex); // For debugging, remove later\n\n    setMetronome(metronomeIndex);\n    console.log(isRunning); // For debugging, remove later   \n  };\n\n  function stopMetronome() {\n    isRunning = false;\n    console.log(isRunning); // For debugging, remove later\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ControlButtons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"PlayButton\",\n        onClick: setMetronomeInterval\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"StopButton\",\n        onClick: clearInterval(metronomeInterval)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 73\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metronome\" + metronome\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settingbars\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"settings\",\n          className: \"text\",\n          placeholder: \"Insert BPM...\",\n          onChange: handleBpmChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text\",\n          id: \"settingbutton\",\n          onClick: submitBpmChange,\n          children: \"Set\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 115\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settingbars\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"settings\",\n          className: \"text\",\n          placeholder: \"Insert delay (MS)...\",\n          onChange: handleDelayChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text\",\n          id: \"settingbutton\",\n          onClick: submitDelayChange,\n          children: \"Set\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 124\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(Metronome, \"/TsqCqi+iqJH9TqKPahD3StxQG4=\");\n_c = Metronome;\nexport default Metronome;\nvar _c;\n$RefreshReg$(_c, \"Metronome\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","jsxDEV","_jsxDEV","Metronome","_ref","_s","initialBpm","initialDelay","bpm","setBpm","delay","setDelay","metronome","setMetronome","handleBpmChange","event","target","value","submitBpmChange","handleDelayChange","submitDelayChange","metronomeIndex","interval","isRunning","metronomeInterval","setMetronomeInterval","setInterval","startMetronome","console","log","stopMetronome","children","className","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","clearInterval","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Users/bryce/beatvisualizer/src/Metronome/Metronome.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\r\nimport \"./Metronome.css\";\r\n\r\nconst Metronome = ({ initialBpm, initialDelay }) => {\r\n    const [bpm, setBpm] = useState(120);\r\n    const [delay, setDelay] = useState();\r\n    const [metronome, setMetronome] = useState(0);\r\n\r\n    const handleBpmChange = useCallback((event) => {\r\n        setBpm(event.target.value);\r\n    });\r\n\r\n    const submitBpmChange = useCallback(() => {\r\n        initialBpm(bpm);\r\n    }, [initialBpm, bpm]);\r\n\r\n    const handleDelayChange = useCallback((event) => {\r\n        setDelay(event.target.value);\r\n    });\r\n\r\n    const submitDelayChange = useCallback(() => {\r\n        initialDelay(delay);\r\n    }, [initialDelay, delay]);\r\n\r\n    let metronomeIndex = 0;\r\n    const interval = 60000 / bpm;\r\n    let isRunning;\r\n    let metronomeInterval;\r\n\r\n    function setMetronomeInterval() {\r\n        metronomeInterval = setInterval(startMetronome, interval)\r\n    }\r\n    \r\n    const startMetronome = () => { \r\n        if (metronomeIndex >= 4) {\r\n            metronomeIndex = 0;\r\n        }\r\n        metronomeIndex++;\r\n        \r\n        console.log(metronomeIndex); // For debugging, remove later\r\n        \r\n        setMetronome(metronomeIndex);\r\n        \r\n        console.log(isRunning); // For debugging, remove later   \r\n    };\r\n    \r\n    function stopMetronome() {\r\n        isRunning = false;\r\n        console.log(isRunning); // For debugging, remove later\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"ControlButtons\">\r\n                <button id=\"PlayButton\" onClick={setMetronomeInterval}/><button id=\"StopButton\" onClick={clearInterval(metronomeInterval)}/>\r\n            </div>\r\n            <div className={\"metronome\" + metronome} />\r\n            <div className='settings'>\r\n                <div className='settingbars'>\r\n                    <input id=\"settings\" className=\"text\" placeholder='Insert BPM...' onChange={handleBpmChange}/><button className=\"text\" id=\"settingbutton\" onClick={submitBpmChange}>Set</button>\r\n                </div>\r\n                <div className='settingbars'>\r\n                    <input id=\"settings\" className=\"text\" placeholder='Insert delay (MS)...' onChange={handleDelayChange}/><button className=\"text\" id=\"settingbutton\" onClick={submitDelayChange}>Set</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Metronome;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}