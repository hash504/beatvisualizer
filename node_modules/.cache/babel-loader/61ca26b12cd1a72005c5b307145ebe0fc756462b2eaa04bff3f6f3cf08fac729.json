{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bryce\\\\beatvisualizer\\\\src\\\\VideoPlayer\\\\VideoPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport ReactPlayer from 'react-player';\nimport \"./VideoPlayer.css\";\nimport Metronome from \"../Metronome/Metronome\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = _ref => {\n  _s();\n  let {\n    videoUrl\n  } = _ref;\n  const [bpm, setBpm] = useState(120);\n  const [delay, setDelay] = useState();\n  const playerRef = useRef(null);\n  var [playback, setPlayback] = useState(false);\n  function changeBpm(result) {\n    setBpm(result);\n  }\n  function changeDelay(result) {\n    setDelay(result);\n  }\n  function handlePlayback(result) {\n    setPlayback(result);\n    playerRef.current.seekTo(0);\n  }\n  function isReady() {\n    setPlayback(true);\n  }\n  function setTimeToZero() {\n    setPlayback(false);\n    playerRef.current.seekTo(0);\n  }\n\n  // Previously, the metronome would start before the video loaded, and i couldn't find a way to delay the start of the metronome until the video started\n  // Instead, i used onReady and onStart to play the video (which loads it), then immediately stop it, then set it back to the beginning via playerRef.current.seekTo(0)\n  // I spent almost a week trying to deal with this singular issue so i don't really care how convoluted this solution is\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"VideoControls\",\n    children: [/*#__PURE__*/_jsxDEV(ReactPlayer, {\n      ref: playerRef,\n      controls: true,\n      width: \"900px\",\n      height: \"540px\",\n      url: videoUrl,\n      onReady: isReady,\n      onStart: setTimeToZero,\n      muted: !playback,\n      volume: 0.5,\n      playing: playback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Metronome, {\n        initialBpm: changeBpm,\n        initialDelay: changeDelay,\n        playback: handlePlayback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(VideoPlayer, \"Wx7y5VyRgBjyesBLL4Gh2SSRKvk=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useState","useRef","ReactPlayer","Metronome","jsxDEV","_jsxDEV","VideoPlayer","_ref","_s","videoUrl","bpm","setBpm","delay","setDelay","playerRef","playback","setPlayback","changeBpm","result","changeDelay","handlePlayback","current","seekTo","isReady","setTimeToZero","id","children","ref","controls","width","height","url","onReady","onStart","muted","volume","playing","fileName","_jsxFileName","lineNumber","columnNumber","initialBpm","initialDelay","_c","$RefreshReg$"],"sources":["C:/Users/bryce/beatvisualizer/src/VideoPlayer/VideoPlayer.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport ReactPlayer from 'react-player';\r\nimport \"./VideoPlayer.css\";\r\nimport Metronome from \"../Metronome/Metronome\"\r\n\r\nconst VideoPlayer = ({ videoUrl }) => {\r\n\r\n    const [bpm, setBpm] = useState(120);\r\n    const [delay, setDelay] = useState();\r\n    const playerRef = useRef(null);\r\n    var [playback, setPlayback] = useState(false);\r\n\r\n    function changeBpm(result) {\r\n        setBpm(result);\r\n    }\r\n\r\n    function changeDelay(result) {\r\n        setDelay(result);\r\n    }\r\n    \r\n    function handlePlayback(result) {\r\n        setPlayback(result);\r\n        playerRef.current.seekTo(0);\r\n    }\r\n\r\n    function isReady() {\r\n        setPlayback(true);\r\n        \r\n    }\r\n\r\n    function setTimeToZero() { \r\n        setPlayback(false);\r\n        playerRef.current.seekTo(0);\r\n    }\r\n\r\n    // Previously, the metronome would start before the video loaded, and i couldn't find a way to delay the start of the metronome until the video started\r\n    // Instead, i used onReady and onStart to play the video (which loads it), then immediately stop it, then set it back to the beginning via playerRef.current.seekTo(0)\r\n    // I spent almost a week trying to deal with this singular issue so i don't really care how convoluted this solution is\r\n\r\n    return (\r\n        <div id=\"VideoControls\">\r\n            <ReactPlayer\r\n                ref={playerRef}\r\n                controls\r\n                width=\"900px\" height=\"540px\"\r\n                url={videoUrl}\r\n                onReady={isReady}\r\n                onStart={setTimeToZero}\r\n                muted={!playback}\r\n                volume={0.5}\r\n                playing={playback}\r\n            />\r\n            <div>\r\n                <Metronome initialBpm={changeBpm} initialDelay={changeDelay} playback={handlePlayback} />\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default VideoPlayer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAO,mBAAmB;AAC1B,OAAOC,SAAS,MAAM,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,WAAW,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAE7B,MAAM,CAACG,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,GAAG,CAAC;EACnC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,EAAE;EACpC,MAAMc,SAAS,GAAGb,MAAM,CAAC,IAAI,CAAC;EAC9B,IAAI,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAE7C,SAASiB,SAASA,CAACC,MAAM,EAAE;IACvBP,MAAM,CAACO,MAAM,CAAC;EAClB;EAEA,SAASC,WAAWA,CAACD,MAAM,EAAE;IACzBL,QAAQ,CAACK,MAAM,CAAC;EACpB;EAEA,SAASE,cAAcA,CAACF,MAAM,EAAE;IAC5BF,WAAW,CAACE,MAAM,CAAC;IACnBJ,SAAS,CAACO,OAAO,CAACC,MAAM,CAAC,CAAC,CAAC;EAC/B;EAEA,SAASC,OAAOA,CAAA,EAAG;IACfP,WAAW,CAAC,IAAI,CAAC;EAErB;EAEA,SAASQ,aAAaA,CAAA,EAAG;IACrBR,WAAW,CAAC,KAAK,CAAC;IAClBF,SAAS,CAACO,OAAO,CAACC,MAAM,CAAC,CAAC,CAAC;EAC/B;;EAEA;EACA;EACA;;EAEA,oBACIjB,OAAA;IAAKoB,EAAE,EAAC,eAAe;IAAAC,QAAA,gBACnBrB,OAAA,CAACH,WAAW;MACRyB,GAAG,EAAEb,SAAU;MACfc,QAAQ;MACRC,KAAK,EAAC,OAAO;MAACC,MAAM,EAAC,OAAO;MAC5BC,GAAG,EAAEtB,QAAS;MACduB,OAAO,EAAET,OAAQ;MACjBU,OAAO,EAAET,aAAc;MACvBU,KAAK,EAAE,CAACnB,QAAS;MACjBoB,MAAM,EAAE,GAAI;MACZC,OAAO,EAAErB;IAAS;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpB,eACFnC,OAAA;MAAAqB,QAAA,eACIrB,OAAA,CAACF,SAAS;QAACsC,UAAU,EAAExB,SAAU;QAACyB,YAAY,EAAEvB,WAAY;QAACJ,QAAQ,EAAEK;MAAe;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACvF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEJ;AAGd,CAAC;AAAAhC,EAAA,CAtDKF,WAAW;AAAAqC,EAAA,GAAXrC,WAAW;AAwDjB,eAAeA,WAAW;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}