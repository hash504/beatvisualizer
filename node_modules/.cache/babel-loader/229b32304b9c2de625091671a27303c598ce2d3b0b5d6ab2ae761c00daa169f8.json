{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bryce\\\\beatvisualizer\\\\src\\\\Metronome\\\\Metronome.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from \"react\";\nimport \"./Metronome.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Metronome = _ref => {\n  _s();\n  let {\n    initialBpm,\n    initialDelay\n  } = _ref;\n  const [bpm, setBpm] = useState(initialBpm);\n  const [delay, setDelay] = useState(initialDelay);\n\n  /*\r\n  const handleBpmChange = useCallback((event) => {\r\n      setBpm(event.target.value);\r\n  });\r\n  */\n\n  const handleBpmChange = setBpm(event => event);\n  const handleDelayChange = event => {\n    setDelay(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metronome0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"settings\",\n        className: \"text\",\n        placeholder: \"Insert BPM...\",\n        onSearch: handleBpmChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"metronomeButtons\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 111\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"settings\",\n        className: \"text\",\n        placeholder: \"Insert delay (MS)...\",\n        onSearch: handleDelayChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"metronomeButtons\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 120\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(Metronome, \"xwagHQT+0BEJpLp0koPsHeLYcVg=\");\n_c = Metronome;\nexport default Metronome;\nvar _c;\n$RefreshReg$(_c, \"Metronome\");","map":{"version":3,"names":["React","useState","useCallback","jsxDEV","_jsxDEV","Metronome","_ref","_s","initialBpm","initialDelay","bpm","setBpm","delay","setDelay","handleBpmChange","event","handleDelayChange","target","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","placeholder","onSearch","_c","$RefreshReg$"],"sources":["C:/Users/bryce/beatvisualizer/src/Metronome/Metronome.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport \"./Metronome.css\";\r\n\r\nconst Metronome = ({ initialBpm, initialDelay }) => {\r\n    const [bpm, setBpm] = useState(initialBpm);\r\n    const [delay, setDelay] = useState(initialDelay);\r\n\r\n    /*\r\n    const handleBpmChange = useCallback((event) => {\r\n        setBpm(event.target.value);\r\n    });\r\n    */\r\n\r\n    const handleBpmChange = setBpm(event => event);\r\n\r\n    const handleDelayChange = (event) => {\r\n        setDelay(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='metronome0' />\r\n            <div className='settings'>\r\n                <input id=\"settings\" className=\"text\" placeholder='Insert BPM...' onSearch={handleBpmChange}/><button id=\"metronomeButtons\"/>\r\n                <input id=\"settings\" className=\"text\" placeholder='Insert delay (MS)...' onSearch={handleDelayChange}/><button id=\"metronomeButtons\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Metronome;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACpD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGC,IAAA,IAAkC;EAAAC,EAAA;EAAA,IAAjC;IAAEC,UAAU;IAAEC;EAAa,CAAC,GAAAH,IAAA;EAC3C,MAAM,CAACI,GAAG,EAAEC,MAAM,CAAC,GAAGV,QAAQ,CAACO,UAAU,CAAC;EAC1C,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAACQ,YAAY,CAAC;;EAEhD;AACJ;AACA;AACA;AACA;;EAEI,MAAMK,eAAe,GAAGH,MAAM,CAACI,KAAK,IAAIA,KAAK,CAAC;EAE9C,MAAMC,iBAAiB,GAAID,KAAK,IAAK;IACjCF,QAAQ,CAACE,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,oBACId,OAAA;IAAAe,QAAA,gBACIf,OAAA;MAAKgB,SAAS,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC9BpB,OAAA;MAAKgB,SAAS,EAAC,UAAU;MAAAD,QAAA,gBACrBf,OAAA;QAAOqB,EAAE,EAAC,UAAU;QAACL,SAAS,EAAC,MAAM;QAACM,WAAW,EAAC,eAAe;QAACC,QAAQ,EAAEb;MAAgB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAAApB,OAAA;QAAQqB,EAAE,EAAC;MAAkB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAC7HpB,OAAA;QAAOqB,EAAE,EAAC,UAAU;QAACL,SAAS,EAAC,MAAM;QAACM,WAAW,EAAC,sBAAsB;QAACC,QAAQ,EAAEX;MAAkB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAAApB,OAAA;QAAQqB,EAAE,EAAC;MAAkB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd,CAAC;AAAAjB,EAAA,CAzBKF,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AA2Bf,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}