{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bryce\\\\beatvisualizer\\\\src\\\\Metronome\\\\Metronome.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useRef } from \"react\";\nimport \"./Metronome.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Metronome = _ref => {\n  _s();\n  let {\n    initialBpm,\n    initialDelay\n  } = _ref;\n  const [bpm, setBpm] = useState(120);\n  const [delay, setDelay] = useState();\n  const [metronome, setMetronome] = useState(0);\n  const handleBpmChange = useCallback(event => {\n    setBpm(event.target.value);\n  });\n  const submitBpmChange = useCallback(() => {\n    initialBpm(bpm);\n  }, [initialBpm, bpm]);\n  const handleDelayChange = useCallback(event => {\n    setDelay(event.target.value);\n  });\n  const submitDelayChange = useCallback(() => {\n    initialDelay(delay);\n  }, [initialDelay, delay]);\n  let metronomeIndex = 1;\n  const interval = 60000 / bpm;\n  const delayInterval = useRef(null);\n  const metronomeInterval = useRef(null);\n  delayInterval.current = setTimeout(metronomeInterval.current, delay);\n  const startMetronome = () => {\n    setTimeout(() => {\n      setMetronome(1);\n      metronomeInterval.current = setInterval(() => {\n        if (metronomeIndex >= 4) {\n          metronomeIndex = 0;\n        }\n        metronomeIndex++;\n        setMetronome(metronomeIndex);\n        console.log(metronomeIndex); // For debugging\n      }, interval);\n    }, delay);\n  };\n  const stopMetronome = () => {\n    clearTimeout(delayInterval.current);\n    clearInterval(metronomeInterval.current);\n    metronomeInterval.current = null;\n    setMetronome(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ControlButtons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"PlayButton\",\n        onClick: startMetronome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"StopButton\",\n        onClick: stopMetronome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 67\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metronome\" + metronome\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settingbars\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"settings\",\n          className: \"text\",\n          placeholder: \"Insert BPM...\",\n          onChange: handleBpmChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text\",\n          id: \"settingbutton\",\n          onClick: submitBpmChange,\n          children: \"Set\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 115\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settingbars\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"settings\",\n          className: \"text\",\n          placeholder: \"Insert delay (MS)...\",\n          onChange: handleDelayChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text\",\n          id: \"settingbutton\",\n          onClick: submitDelayChange,\n          children: \"Set\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 124\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(Metronome, \"jpaz+Npt2txjZcH/7dzkcrokmh0=\");\n_c = Metronome;\nexport default Metronome;\nvar _c;\n$RefreshReg$(_c, \"Metronome\");","map":{"version":3,"names":["React","useState","useCallback","useRef","jsxDEV","_jsxDEV","Metronome","_ref","_s","initialBpm","initialDelay","bpm","setBpm","delay","setDelay","metronome","setMetronome","handleBpmChange","event","target","value","submitBpmChange","handleDelayChange","submitDelayChange","metronomeIndex","interval","delayInterval","metronomeInterval","current","setTimeout","startMetronome","setInterval","console","log","stopMetronome","clearTimeout","clearInterval","children","className","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Users/bryce/beatvisualizer/src/Metronome/Metronome.js"],"sourcesContent":["import React, { useState, useCallback, useRef } from \"react\";\r\nimport \"./Metronome.css\";\r\n\r\nconst Metronome = ({ initialBpm, initialDelay }) => {\r\n    const [bpm, setBpm] = useState(120);\r\n    const [delay, setDelay] = useState();\r\n    const [metronome, setMetronome] = useState(0);\r\n\r\n    const handleBpmChange = useCallback((event) => {\r\n        setBpm(event.target.value);\r\n    });\r\n\r\n    const submitBpmChange = useCallback(() => {\r\n        initialBpm(bpm);\r\n    }, [initialBpm, bpm]);\r\n\r\n    const handleDelayChange = useCallback((event) => {\r\n        setDelay(event.target.value);\r\n    });\r\n\r\n    const submitDelayChange = useCallback(() => {\r\n        initialDelay(delay);\r\n    }, [initialDelay, delay]);\r\n\r\n\r\n\r\n    let metronomeIndex = 1;\r\n    const interval = 60000 / bpm;\r\n    const delayInterval = useRef(null);\r\n    const metronomeInterval = useRef(null);\r\n    delayInterval.current = setTimeout(metronomeInterval.current, delay);\r\n\r\n    const startMetronome = () => { \r\n        setTimeout(() => {\r\n            setMetronome(1);\r\n            metronomeInterval.current = setInterval(() => {\r\n                if (metronomeIndex >= 4) {\r\n                    metronomeIndex = 0;\r\n                }\r\n                metronomeIndex++;\r\n                setMetronome(metronomeIndex);\r\n\r\n                console.log(metronomeIndex); // For debugging\r\n            }, interval)\r\n        }, delay)\r\n        \r\n        \r\n    };\r\n    \r\n    const stopMetronome = () => {\r\n        clearTimeout(delayInterval.current);\r\n        clearInterval(metronomeInterval.current);\r\n        metronomeInterval.current = null;\r\n        setMetronome(0);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"ControlButtons\">\r\n                <button id=\"PlayButton\" onClick={startMetronome}/><button id=\"StopButton\" onClick={stopMetronome}/>\r\n            </div>\r\n            <div className={\"metronome\" + metronome} />\r\n            <div className='settings'>\r\n                <div className='settingbars'>\r\n                    <input id=\"settings\" className=\"text\" placeholder='Insert BPM...' onChange={handleBpmChange}/><button className=\"text\" id=\"settingbutton\" onClick={submitBpmChange}>Set</button>\r\n                </div>\r\n                <div className='settingbars'>\r\n                    <input id=\"settings\" className=\"text\" placeholder='Insert delay (MS)...' onChange={handleDelayChange}/><button className=\"text\" id=\"settingbutton\" onClick={submitDelayChange}>Set</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Metronome;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AAC5D,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGC,IAAA,IAAkC;EAAAC,EAAA;EAAA,IAAjC;IAAEC,UAAU;IAAEC;EAAa,CAAC,GAAAH,IAAA;EAC3C,MAAM,CAACI,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,GAAG,CAAC;EACnC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,EAAE;EACpC,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAE7C,MAAMgB,eAAe,GAAGf,WAAW,CAAEgB,KAAK,IAAK;IAC3CN,MAAM,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC,CAAC;EAEF,MAAMC,eAAe,GAAGnB,WAAW,CAAC,MAAM;IACtCO,UAAU,CAACE,GAAG,CAAC;EACnB,CAAC,EAAE,CAACF,UAAU,EAAEE,GAAG,CAAC,CAAC;EAErB,MAAMW,iBAAiB,GAAGpB,WAAW,CAAEgB,KAAK,IAAK;IAC7CJ,QAAQ,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC,CAAC;EAEF,MAAMG,iBAAiB,GAAGrB,WAAW,CAAC,MAAM;IACxCQ,YAAY,CAACG,KAAK,CAAC;EACvB,CAAC,EAAE,CAACH,YAAY,EAAEG,KAAK,CAAC,CAAC;EAIzB,IAAIW,cAAc,GAAG,CAAC;EACtB,MAAMC,QAAQ,GAAG,KAAK,GAAGd,GAAG;EAC5B,MAAMe,aAAa,GAAGvB,MAAM,CAAC,IAAI,CAAC;EAClC,MAAMwB,iBAAiB,GAAGxB,MAAM,CAAC,IAAI,CAAC;EACtCuB,aAAa,CAACE,OAAO,GAAGC,UAAU,CAACF,iBAAiB,CAACC,OAAO,EAAEf,KAAK,CAAC;EAEpE,MAAMiB,cAAc,GAAGA,CAAA,KAAM;IACzBD,UAAU,CAAC,MAAM;MACbb,YAAY,CAAC,CAAC,CAAC;MACfW,iBAAiB,CAACC,OAAO,GAAGG,WAAW,CAAC,MAAM;QAC1C,IAAIP,cAAc,IAAI,CAAC,EAAE;UACrBA,cAAc,GAAG,CAAC;QACtB;QACAA,cAAc,EAAE;QAChBR,YAAY,CAACQ,cAAc,CAAC;QAE5BQ,OAAO,CAACC,GAAG,CAACT,cAAc,CAAC,CAAC,CAAC;MACjC,CAAC,EAAEC,QAAQ,CAAC;IAChB,CAAC,EAAEZ,KAAK,CAAC;EAGb,CAAC;EAED,MAAMqB,aAAa,GAAGA,CAAA,KAAM;IACxBC,YAAY,CAACT,aAAa,CAACE,OAAO,CAAC;IACnCQ,aAAa,CAACT,iBAAiB,CAACC,OAAO,CAAC;IACxCD,iBAAiB,CAACC,OAAO,GAAG,IAAI;IAChCZ,YAAY,CAAC,CAAC,CAAC;EACnB,CAAC;EAKD,oBACIX,OAAA;IAAAgC,QAAA,gBACIhC,OAAA;MAAKiC,SAAS,EAAC,gBAAgB;MAAAD,QAAA,gBAC3BhC,OAAA;QAAQkC,EAAE,EAAC,YAAY;QAACC,OAAO,EAAEV;MAAe;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAAAvC,OAAA;QAAQkC,EAAE,EAAC,YAAY;QAACC,OAAO,EAAEN;MAAc;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjG,eACNvC,OAAA;MAAKiC,SAAS,EAAE,WAAW,GAAGvB;IAAU;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC3CvC,OAAA;MAAKiC,SAAS,EAAC,UAAU;MAAAD,QAAA,gBACrBhC,OAAA;QAAKiC,SAAS,EAAC,aAAa;QAAAD,QAAA,gBACxBhC,OAAA;UAAOkC,EAAE,EAAC,UAAU;UAACD,SAAS,EAAC,MAAM;UAACO,WAAW,EAAC,eAAe;UAACC,QAAQ,EAAE7B;QAAgB;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE,eAAAvC,OAAA;UAAQiC,SAAS,EAAC,MAAM;UAACC,EAAE,EAAC,eAAe;UAACC,OAAO,EAAEnB,eAAgB;UAAAgB,QAAA,EAAC;QAAG;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC9K,eACNvC,OAAA;QAAKiC,SAAS,EAAC,aAAa;QAAAD,QAAA,gBACxBhC,OAAA;UAAOkC,EAAE,EAAC,UAAU;UAACD,SAAS,EAAC,MAAM;UAACO,WAAW,EAAC,sBAAsB;UAACC,QAAQ,EAAExB;QAAkB;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE,eAAAvC,OAAA;UAAQiC,SAAS,EAAC,MAAM;UAACC,EAAE,EAAC,eAAe;UAACC,OAAO,EAAEjB,iBAAkB;UAAAc,QAAA,EAAC;QAAG;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACzL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd,CAAC;AAAApC,EAAA,CAxEKF,SAAS;AAAAyC,EAAA,GAATzC,SAAS;AA0Ef,eAAeA,SAAS;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}