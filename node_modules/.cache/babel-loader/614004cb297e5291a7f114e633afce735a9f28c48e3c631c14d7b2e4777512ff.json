{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bryce\\\\beatvisualizer\\\\src\\\\Metronome\\\\Metronome.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from \"react\";\nimport \"./Metronome.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Metronome = _ref => {\n  _s();\n  let {\n    bpmChange\n  } = _ref;\n  const [bpm, setBpm] = useState();\n  const [delay, setDelay] = useState();\n  const handleBpmChange = useCallback(event => {\n    setBpm(event.target.value);\n  });\n  const saveBpmChange = useCallback(() => {\n    bpmChange(bpm);\n  }, [bpmChange, bpm]);\n  const handleDelayChange = event => {\n    setDelay(event.target.value);\n  };\n  const saveDelayChange = useCallback(() => {\n    props.delayChange(delay);\n  }, [props.delayChange, delay]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metronome0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"settings\",\n        className: \"text\",\n        placeholder: \"Insert BPM...\",\n        onChange: handleBpmChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveBpmChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 111\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"settings\",\n        className: \"text\",\n        placeholder: \"Insert delay (MS)...\",\n        onChange: handleDelayChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveBpmChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 120\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(Metronome, \"BmRv7sCIdsGGjnHfUKALXAaySMg=\");\n_c = Metronome;\nexport default Metronome;\nvar _c;\n$RefreshReg$(_c, \"Metronome\");","map":{"version":3,"names":["React","useState","useCallback","jsxDEV","_jsxDEV","Metronome","_ref","_s","bpmChange","bpm","setBpm","delay","setDelay","handleBpmChange","event","target","value","saveBpmChange","handleDelayChange","saveDelayChange","props","delayChange","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/bryce/beatvisualizer/src/Metronome/Metronome.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport \"./Metronome.css\";\r\n\r\nconst Metronome = ({ bpmChange }) => {\r\n    const [bpm, setBpm] = useState();\r\n    const [delay, setDelay] = useState();\r\n\r\n    const handleBpmChange = useCallback((event) => {\r\n        setBpm(event.target.value)\r\n    });\r\n\r\n    const saveBpmChange = useCallback(() => {\r\n        bpmChange(bpm);\r\n    }, [bpmChange, bpm])\r\n\r\n    const handleDelayChange = (event) => {\r\n        setDelay(event.target.value);\r\n    }\r\n\r\n    const saveDelayChange = useCallback(() => {\r\n        props.delayChange(delay);\r\n    }, [props.delayChange, delay])\r\n\r\n    return (\r\n        <div>\r\n            <div className='metronome0' />\r\n            <div className='settings'>\r\n                <input id=\"settings\" className=\"text\" placeholder='Insert BPM...' onChange={handleBpmChange}/><button onClick={saveBpmChange}/>\r\n                <input id=\"settings\" className=\"text\" placeholder='Insert delay (MS)...' onChange={handleDelayChange}/><button onClick={saveBpmChange}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Metronome;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACpD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGC,IAAA,IAAmB;EAAAC,EAAA;EAAA,IAAlB;IAAEC;EAAU,CAAC,GAAAF,IAAA;EAC5B,MAAM,CAACG,GAAG,EAAEC,MAAM,CAAC,GAAGT,QAAQ,EAAE;EAChC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,EAAE;EAEpC,MAAMY,eAAe,GAAGX,WAAW,CAAEY,KAAK,IAAK;IAC3CJ,MAAM,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC,CAAC;EAEF,MAAMC,aAAa,GAAGf,WAAW,CAAC,MAAM;IACpCM,SAAS,CAACC,GAAG,CAAC;EAClB,CAAC,EAAE,CAACD,SAAS,EAAEC,GAAG,CAAC,CAAC;EAEpB,MAAMS,iBAAiB,GAAIJ,KAAK,IAAK;IACjCF,QAAQ,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMG,eAAe,GAAGjB,WAAW,CAAC,MAAM;IACtCkB,KAAK,CAACC,WAAW,CAACV,KAAK,CAAC;EAC5B,CAAC,EAAE,CAACS,KAAK,CAACC,WAAW,EAAEV,KAAK,CAAC,CAAC;EAE9B,oBACIP,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAKmB,SAAS,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC9BvB,OAAA;MAAKmB,SAAS,EAAC,UAAU;MAAAD,QAAA,gBACrBlB,OAAA;QAAOwB,EAAE,EAAC,UAAU;QAACL,SAAS,EAAC,MAAM;QAACM,WAAW,EAAC,eAAe;QAACC,QAAQ,EAAEjB;MAAgB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAAAvB,OAAA;QAAQ2B,OAAO,EAAEd;MAAc;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAC/HvB,OAAA;QAAOwB,EAAE,EAAC,UAAU;QAACL,SAAS,EAAC,MAAM;QAACM,WAAW,EAAC,sBAAsB;QAACC,QAAQ,EAAEZ;MAAkB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAAAvB,OAAA;QAAQ2B,OAAO,EAAEd;MAAc;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd,CAAC;AAAApB,EAAA,CA7BKF,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AA+Bf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}