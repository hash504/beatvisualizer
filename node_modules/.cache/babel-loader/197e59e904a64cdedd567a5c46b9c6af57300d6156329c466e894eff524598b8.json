{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bryce\\\\beatvisualizer\\\\src\\\\Spotify\\\\Spotify.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { Buffer } from 'buffer';\nimport axios from 'axios';\nimport \"./Spotify.css\";\n\n/*\r\nThis entire file is a work in progress. Sometime in the future i will add functionality of searching Spotify via an API request.\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst redirectUri = 'http://localhost:3000/';\nconst Spotify = _ref => {\n  _s();\n  let {\n    onSearch,\n    searchTerm\n  } = _ref;\n  const clientId = \"3b34a668dafb405292e73bed43f382d1\";\n  const clientSecret = \"91e1d6b99541441e9774a89b6058a3f3\";\n  const [term, setTerm] = useState(\"\");\n  const handleTermChange = useCallback(event => {\n    setTerm(event.target.value);\n  }, []);\n  const [token, setToken] = useState('');\n  const resultsData = {\n    title: [],\n    artist: [],\n    id: [],\n    bpm: []\n  };\n  useEffect(() => {\n    axios(\"https://accounts.spotify.com/api/token\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Authorization': 'Basic ' + btoa(clientId + ':' + clientSecret)\n      },\n      data: 'grant_type=client_credentials'\n    }).then(tokenResponse => {\n      console.log(tokenResponse.data.access_token);\n      setToken(tokenResponse.data.access_token);\n    });\n  }, []);\n  const searchResults = useCallback(() => {\n    onSearch(term);\n    const newTerm = term.replace(/ /g, \"+\");\n    setTerm(newTerm);\n    getResults();\n  }, [onSearch, term]);\n  const getResults = () => {\n    axios(`https://api.spotify.com/v1/search?q=${term}&type=track&limit=5`, {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(searchResults => {\n      //console.log(searchResults);\n      resultsData.title = searchResults.data.tracks.items.map(track => track.name);\n      resultsData.id = searchResults.data.tracks.items.map(track => track.id);\n      resultsData.artist = searchResults.data.tracks.items.map(track => track.artists[0].name);\n      axios(`https://api.spotify.com/v1/audio-features?ids=${resultsData.id[0]}%2C${resultsData.id[1]}%2C${resultsData.id[2]}%2C${resultsData.id[3]}%2C${resultsData.id[4]}%2C`, {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      }).then(searchResults => {\n        console.log(searchResults);\n        resultsData.bpm = searchResults.data.audio_features.map(track => Math.round(track.tempo));\n      });\n    }, []);\n    setResults();\n    console.log(resultsData);\n  };\n  var results;\n  const getResultText = useCallback((i, songTextId, bpmTextId) => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"text\",\n        id: songTextId,\n        children: [resultsData.title[i], \" - \", resultsData.artist[i]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"text\",\n        id: bpmTextId,\n        children: resultsData.bpm[i]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  });\n  const setResults = useCallback(() => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"SearchResults\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"Table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: \"2\",\n              className: \"text\",\n              id: \"WarningText\",\n              children: \"BPM values are approximate.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text\",\n              id: \"SongText\",\n              children: \"Song Name - Artist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text\",\n              id: \"BpmText\",\n              children: \"BPM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [getResultText(0, \"SongText\", \"BpmText\"), getResultText(1, \"SongText\", \"BpmText\"), getResultText(2, \"SongText\", \"BpmText\"), getResultText(3, \"SongText\", \"BpmText\"), getResultText(4, \"SongTextBottom\", \"BpmTextBottom\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"SearchBar\",\n        className: \"text\",\n        placeholder: \"Search Spotify...\",\n        onChange: handleTermChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"SearchButton\",\n        onClick: searchResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), setResults]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n};\n_s(Spotify, \"BArKr3E43qvEnJeBFzJSregcqe8=\");\n_c = Spotify;\nexport default Spotify;\nvar _c;\n$RefreshReg$(_c, \"Spotify\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","Buffer","axios","jsxDEV","_jsxDEV","redirectUri","Spotify","_ref","_s","onSearch","searchTerm","clientId","clientSecret","term","setTerm","handleTermChange","event","target","value","token","setToken","resultsData","title","artist","id","bpm","method","headers","btoa","data","then","tokenResponse","console","log","access_token","searchResults","newTerm","replace","getResults","tracks","items","map","track","name","artists","audio_features","Math","round","tempo","setResults","results","getResultText","i","songTextId","bpmTextId","children","className","fileName","_jsxFileName","lineNumber","columnNumber","colSpan","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/bryce/beatvisualizer/src/Spotify/Spotify.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Buffer } from 'buffer';\r\nimport axios from 'axios';\r\nimport \"./Spotify.css\"\r\n\r\n/*\r\nThis entire file is a work in progress. Sometime in the future i will add functionality of searching Spotify via an API request.\r\n*/\r\n\r\nconst redirectUri = 'http://localhost:3000/';\r\n\r\nconst Spotify = ({ onSearch, searchTerm }) => {\r\n\r\n    const clientId = \"3b34a668dafb405292e73bed43f382d1\";\r\n    const clientSecret = \"91e1d6b99541441e9774a89b6058a3f3\";\r\n\r\n    const [term, setTerm] = useState(\"\");\r\n\r\n    const handleTermChange = useCallback((event) => {\r\n        setTerm(event.target.value);\r\n        \r\n    }, [])\r\n\r\n    const [token, setToken] = useState(''); \r\n    const resultsData = {\r\n        title: [],\r\n        artist: [],\r\n        id: [],\r\n        bpm: []\r\n    };\r\n\r\n    useEffect(() => {\r\n        axios(\"https://accounts.spotify.com/api/token\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type' : 'application/x-www-form-urlencoded',\r\n                'Authorization' : 'Basic ' + btoa(clientId + ':' + clientSecret)\r\n            },\r\n            data: 'grant_type=client_credentials'\r\n        })\r\n        .then(tokenResponse => {\r\n            console.log(tokenResponse.data.access_token);\r\n            setToken(tokenResponse.data.access_token);\r\n        })\r\n    }, []);\r\n\r\n    const searchResults = useCallback(() => {\r\n        onSearch(term);\r\n        const newTerm = term.replace(/ /g, \"+\");\r\n        setTerm(newTerm);\r\n        getResults();\r\n    }, [onSearch, term]);\r\n\r\n\r\n\r\n    const getResults = () => {\r\n        axios(`https://api.spotify.com/v1/search?q=${term}&type=track&limit=5`, {\r\n            method: 'GET',\r\n            headers: { 'Authorization' : 'Bearer ' + token}\r\n        })\r\n        .then(searchResults => {\r\n            //console.log(searchResults);\r\n            resultsData.title = searchResults.data.tracks.items.map(track => track.name);\r\n            resultsData.id = searchResults.data.tracks.items.map(track => track.id);\r\n            resultsData.artist = searchResults.data.tracks.items.map(track => track.artists[0].name);\r\n            \r\n            axios(`https://api.spotify.com/v1/audio-features?ids=${resultsData.id[0]}%2C${resultsData.id[1]}%2C${resultsData.id[2]}%2C${resultsData.id[3]}%2C${resultsData.id[4]}%2C`, {\r\n                method: 'GET',\r\n                headers: { 'Authorization' : 'Bearer ' + token}\r\n            })\r\n            .then(searchResults => {\r\n                console.log(searchResults);\r\n                resultsData.bpm = searchResults.data.audio_features.map(track => Math.round(track.tempo));\r\n            })\r\n            \r\n        }, [])\r\n        \r\n        setResults();\r\n        console.log(resultsData);\r\n    }\r\n\r\n    var results;\r\n\r\n    \r\n\r\n    const getResultText = useCallback((i, songTextId, bpmTextId) => {\r\n        return (\r\n            <tr> \r\n                <td className=\"text\" id={songTextId}>{resultsData.title[i]} - {resultsData.artist[i]}</td>\r\n                <td className=\"text\" id={bpmTextId}>{resultsData.bpm[i]}</td>\r\n            </tr>\r\n        )\r\n    })\r\n\r\n    const setResults = useCallback(() => {\r\n        return (\r\n            <div id=\"SearchResults\">\r\n                <table id=\"Table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th colSpan=\"2\" className=\"text\" id=\"WarningText\">BPM values are approximate.</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th className=\"text\" id=\"SongText\">Song Name - Artist</th>\r\n                            <th className=\"text\" id=\"BpmText\">BPM</th>\r\n                        </tr>\r\n                        \r\n                    </thead>\r\n                    <tbody>\r\n                        {getResultText(0, \"SongText\", \"BpmText\")}\r\n                        {getResultText(1, \"SongText\", \"BpmText\")}\r\n                        {getResultText(2, \"SongText\", \"BpmText\")}\r\n                        {getResultText(3, \"SongText\", \"BpmText\")}\r\n                        {getResultText(4, \"SongTextBottom\", \"BpmTextBottom\")}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }, [])\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"SearchBar\">\r\n                <h2></h2>\r\n                <input id=\"SearchBar\" className=\"text\" placeholder=\"Search Spotify...\" onChange={handleTermChange}/>\r\n                <button id=\"SearchButton\" onClick={searchResults}></button>\r\n            </div>\r\n            {setResults}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spotify;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}