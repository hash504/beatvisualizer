[{"C:\\Users\\bryce\\beatvisualizer\\src\\index.js":"1","C:\\Users\\bryce\\beatvisualizer\\src\\App\\App.js":"2","C:\\Users\\bryce\\beatvisualizer\\src\\SearchBar\\SearchBar.js":"3","C:\\Users\\bryce\\beatvisualizer\\src\\Metronome\\Metronome.js":"4","C:\\Users\\bryce\\beatvisualizer\\src\\VideoPlayer\\VideoPlayer.js":"5","C:\\Users\\bryce\\beatvisualizer\\src\\Spotify\\Spotify.js":"6","C:\\Users\\bryce\\Documents\\GitHub\\beatvisualizer\\src\\index.js":"7","C:\\Users\\bryce\\Documents\\GitHub\\beatvisualizer\\src\\App\\App.js":"8","C:\\Users\\bryce\\Documents\\GitHub\\beatvisualizer\\src\\SearchBar\\SearchBar.js":"9","C:\\Users\\bryce\\Documents\\GitHub\\beatvisualizer\\src\\VideoPlayer\\VideoPlayer.js":"10","C:\\Users\\bryce\\Documents\\GitHub\\beatvisualizer\\src\\Spotify\\Spotify.js":"11","C:\\Users\\bryce\\Documents\\GitHub\\beatvisualizer\\src\\Metronome\\Metronome.js":"12"},{"size":291,"mtime":1682349783494,"results":"13","hashOfConfig":"14"},{"size":823,"mtime":1684340871607,"results":"15","hashOfConfig":"14"},{"size":655,"mtime":1683828170829,"results":"16","hashOfConfig":"14"},{"size":3180,"mtime":1683572323351,"results":"17","hashOfConfig":"14"},{"size":1968,"mtime":1683732301704,"results":"18","hashOfConfig":"14"},{"size":4892,"mtime":1684513323481,"results":"19","hashOfConfig":"14"},{"size":291,"mtime":1682349783494,"results":"20","hashOfConfig":"21"},{"size":823,"mtime":1684340871607,"results":"22","hashOfConfig":"21"},{"size":655,"mtime":1683828170829,"results":"23","hashOfConfig":"21"},{"size":1968,"mtime":1683732301704,"results":"24","hashOfConfig":"21"},{"size":4892,"mtime":1684513323481,"results":"25","hashOfConfig":"21"},{"size":3180,"mtime":1683572323351,"results":"26","hashOfConfig":"21"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"2llmjl",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"31"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"31"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"s0kqll",{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"C:\\Users\\bryce\\beatvisualizer\\src\\index.js",["69"],[],"import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App/App\";\nimport \"./index.css\";\n\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  \n    <App />\n  \n);\n",[],"C:\\Users\\bryce\\beatvisualizer\\src\\App\\App.js",["70"],[],"import React, { useState, useCallback } from 'react';\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\nimport Spotify from \"../Spotify/Spotify\";\r\nimport VideoPlayer from \"../VideoPlayer/VideoPlayer\"\r\nimport \"./App.css\"\r\n\r\nconst App = () => {\r\n    const [url, setUrl] = useState(\"\");\r\n    const [songBpmTerm, setSongBpmTerm] = useState(\"\");\r\n\r\n\r\n    function search(result) {\r\n        setUrl(result);\r\n    }\r\n\r\n    function searchSongBpm(result) {\r\n        setSongBpmTerm(result);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Beat Visualizer</h1>\r\n            <div>\r\n                <SearchBar onSearch={search} />\r\n                <VideoPlayer videoUrl={url} />\r\n                <Spotify onSearch={searchSongBpm} searchTerm={songBpmTerm}/> \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","C:\\Users\\bryce\\beatvisualizer\\src\\SearchBar\\SearchBar.js",[],[],"C:\\Users\\bryce\\beatvisualizer\\src\\Metronome\\Metronome.js",["71","72"],[],"import React, { useState, useCallback, useRef } from \"react\";\r\nimport useSound from \"use-sound\";\r\nimport \"./Metronome.css\";\r\nimport metronomeSfx from \"./metronome-sfx.mp3\";\r\nimport metronomeFirstBeatSfx from \"./metronome-sfx-firstbeat.mp3\";\r\n\r\n\r\nconst Metronome = ({ initialBpm, initialDelay, playback }) => {\r\n    \r\n    const [bpm, setBpm] = useState(120);\r\n    const [delay, setDelay] = useState();\r\n    const [metronome, setMetronome] = useState(0);\r\n    const [playSfx] = useSound(metronomeSfx, {volume: 0.5});\r\n    const [playFirstBeatSfx] = useSound(metronomeFirstBeatSfx, {volume: 0.5});\r\n\r\n\r\n    const handleBpmChange = useCallback((event) => {\r\n        setBpm(event.target.value);\r\n    });\r\n\r\n    const submitBpmChange = useCallback(() => {\r\n        initialBpm(bpm);\r\n    }, [initialBpm, bpm]);\r\n\r\n    const handleDelayChange = useCallback((event) => {\r\n        setDelay(event.target.value);\r\n    });\r\n\r\n    const submitDelayChange = useCallback(() => {\r\n        initialDelay(delay);\r\n    }, [initialDelay, delay]);\r\n\r\n    let metronomeIndex = 1;\r\n    const interval = 60000 / bpm;\r\n    const delayInterval = useRef(null);\r\n    const metronomeInterval = useRef(null);\r\n    \r\n\r\n    function startMetronome() {\r\n        playback(true);    \r\n        setTimeout(() => {\r\n            setMetronome(1);\r\n            playFirstBeatSfx();\r\n            metronomeInterval.current = setInterval(() => {\r\n                if (metronomeIndex >= 4) {\r\n                    metronomeIndex = 0;\r\n                }\r\n                metronomeIndex++;\r\n                setMetronome(metronomeIndex);\r\n\r\n                if (metronomeIndex === 1) {\r\n                    playFirstBeatSfx();\r\n                }\r\n                else {\r\n                    playSfx();\r\n                }\r\n            }, interval)\r\n        }, delay);\r\n\r\n\r\n    };\r\n\r\n    const stopMetronome = () => {\r\n        playback(false);\r\n        clearTimeout(delayInterval.current);\r\n        clearInterval(metronomeInterval.current);\r\n        metronomeInterval.current = null;\r\n        setMetronome(0);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"ControlButtons\">\r\n                <button id=\"PlayButton\" onClick={startMetronome}/><button id=\"StopButton\" onClick={stopMetronome}/>\r\n            </div>\r\n            <div className={\"metronome\" + metronome} />\r\n            <div className='settings'>\r\n                <div className='settingbars'>\r\n                    <input id=\"settings\" type=\"number\" className=\"text\" placeholder='Insert BPM...' onChange={handleBpmChange}/><button className=\"text\" id=\"settingbutton\" onClick={submitBpmChange}>Set</button>\r\n                </div>\r\n                <div className='settingbars'>\r\n                    <input id=\"settings\" type=\"number\" className=\"text\" placeholder='Insert delay (MS)...' onChange={handleDelayChange}/><button className=\"text\" id=\"settingbutton\" onClick={submitDelayChange}>Set</button>\r\n                </div>\r\n            </div>\r\n            {/* In the future, i might add functionality for getting information from the getsongbpm.com API, the component for it will be here. */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Metronome;","C:\\Users\\bryce\\beatvisualizer\\src\\VideoPlayer\\VideoPlayer.js",["73","74"],[],"import React, { useState, useRef } from \"react\";\r\nimport ReactPlayer from 'react-player';\r\nimport \"./VideoPlayer.css\";\r\nimport Metronome from \"../Metronome/Metronome\"\r\n\r\nconst VideoPlayer = ({ videoUrl }) => {\r\n\r\n    const [bpm, setBpm] = useState(120);\r\n    const [delay, setDelay] = useState();\r\n    const playerRef = useRef(null);\r\n    var [playback, setPlayback] = useState(false);\r\n\r\n    function changeBpm(result) {\r\n        setBpm(result);\r\n    }\r\n\r\n    function changeDelay(result) {\r\n        setDelay(result);\r\n    }\r\n    \r\n    function handlePlayback(result) {\r\n        setPlayback(result);\r\n        playerRef.current.seekTo(0);\r\n    }\r\n\r\n    function isReady() {\r\n        setPlayback(true);\r\n        \r\n    }\r\n\r\n    function setTimeToZero() { \r\n        setPlayback(false);\r\n        playerRef.current.seekTo(0);\r\n    }\r\n\r\n    // Previously, the metronome would start before the video loaded, and i couldn't find a way to delay the start of the metronome until the video started\r\n    // Instead, i used onReady and onStart to play the video (which loads it), then immediately stop it, then set it back to the beginning via playerRef.current.seekTo(0)\r\n    // I spent almost a week trying to deal with this singular issue so i don't really care how convoluted this solution is\r\n\r\n    return (\r\n        <div id=\"VideoControls\">\r\n            <ReactPlayer\r\n                ref={playerRef}\r\n                controls\r\n                width=\"900px\" height=\"540px\"\r\n                style={{backgroundColor: \"black\"}}\r\n                url={videoUrl}\r\n                onReady={isReady}\r\n                onStart={setTimeToZero}\r\n                muted={!playback}\r\n                volume={0.5}\r\n                playing={playback}\r\n            />\r\n            <div>\r\n                <Metronome initialBpm={changeBpm} initialDelay={changeDelay} playback={handlePlayback} />\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default VideoPlayer;","C:\\Users\\bryce\\beatvisualizer\\src\\Spotify\\Spotify.js",["75","76","77","78","79"],[],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Buffer } from 'buffer';\r\nimport axios from 'axios';\r\nimport \"./Spotify.css\"\r\n\r\n/*\r\nThis entire file is a work in progress. Sometime in the future i will add functionality of searching Spotify via an API request.\r\n*/\r\n\r\nconst redirectUri = 'http://localhost:3000/';\r\n\r\nconst Spotify = ({ onSearch, searchTerm }) => {\r\n\r\n    const clientId = \"3b34a668dafb405292e73bed43f382d1\";\r\n    const clientSecret = \"91e1d6b99541441e9774a89b6058a3f3\";\r\n\r\n    const [term, setTerm] = useState(\"\");\r\n\r\n    const handleTermChange = useCallback((event) => {\r\n        setTerm(event.target.value);\r\n        \r\n    }, [])\r\n\r\n    const [token, setToken] = useState(''); \r\n    const resultsData = {\r\n        title: [],\r\n        artist: [],\r\n\r\n        id: [],\r\n        bpm: []\r\n    };\r\n\r\n    useEffect(() => { // Token grabber\r\n        axios(\"https://accounts.spotify.com/api/token\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type' : 'application/x-www-form-urlencoded',\r\n                'Authorization' : 'Basic ' + btoa(clientId + ':' + clientSecret)\r\n            },\r\n            data: 'grant_type=client_credentials'\r\n        })\r\n        .then(tokenResponse => {\r\n            console.log(tokenResponse.data.access_token);\r\n            setToken(tokenResponse.data.access_token);\r\n        })\r\n    }, []);\r\n\r\n    const searchResults = useCallback(() => { //Sets search results\r\n        onSearch(term);\r\n        const newTerm = term.replace(/ /g, \"+\");\r\n        setTerm(newTerm);\r\n        getResults();\r\n    }, [onSearch, term]);\r\n\r\n    const getResultText = useCallback((i, songTextId, bpmTextId) => { // Helper function for getResults\r\n        return (\r\n            <tr> \r\n                <td className=\"text\" id={songTextId}>{resultsData.title[i]} - {resultsData.artist[i]}</td>\r\n                <td className=\"text\" id={bpmTextId}>{resultsData.bpm[i]}</td>\r\n            </tr>\r\n        )\r\n    })\r\n\r\n    const [results, setResults] = useState();\r\n\r\n    const getResults = () => { // Gets search results, then returns JSX table\r\n        setResults('');\r\n        axios(`https://api.spotify.com/v1/search?q=${term}&type=track&limit=5`, {\r\n            method: 'GET',\r\n            headers: { 'Authorization' : 'Bearer ' + token}\r\n        })\r\n        .then(searchResults => {\r\n            //console.log(searchResults);\r\n            resultsData.title = searchResults.data.tracks.items.map(track => track.name);\r\n            resultsData.id = searchResults.data.tracks.items.map(track => track.id);\r\n            resultsData.artist = searchResults.data.tracks.items.map(track => track.artists[0].name);\r\n            \r\n            axios(`https://api.spotify.com/v1/audio-features?ids=${resultsData.id[0]}%2C${resultsData.id[1]}%2C${resultsData.id[2]}%2C${resultsData.id[3]}%2C${resultsData.id[4]}%2C`, {\r\n                method: 'GET',\r\n                headers: { 'Authorization' : 'Bearer ' + token}\r\n            })\r\n            .then(searchResults => {\r\n                resultsData.bpm = searchResults.data.audio_features.map(track => Math.round(track.tempo).toString());\r\n            })\r\n            .then(() => {\r\n                setResults(\r\n                    <div id=\"SearchResults\">\r\n                        <table id=\"Table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th colSpan=\"2\" className=\"text\" id=\"WarningText\">BPM values are approximate.</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th className=\"text\" id=\"SongTextTop\">Song Name - Artist</th>\r\n                                    <th className=\"text\" id=\"BpmTextTop\">BPM</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {getResultText(0, \"SongText\", \"BpmText\")}\r\n                                {getResultText(1, \"SongText\", \"BpmText\")}\r\n                                {getResultText(2, \"SongText\", \"BpmText\")}\r\n                                {getResultText(3, \"SongText\", \"BpmText\")}\r\n                                {getResultText(4, \"SongTextBottom\", \"BpmTextBottom\")}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )\r\n            })\r\n            \r\n        }, [])\r\n        console.log(resultsData);\r\n\r\n        \r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"SearchBar\">\r\n                <h2></h2>\r\n                <input id=\"SearchBar\" className=\"text\" placeholder=\"Search Spotify...\" onChange={handleTermChange}/>\r\n                <button id=\"SearchButton\" onClick={searchResults}></button>\r\n            </div>\r\n            {results}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spotify;","C:\\Users\\bryce\\Documents\\GitHub\\beatvisualizer\\src\\index.js",["80"],[],"C:\\Users\\bryce\\Documents\\GitHub\\beatvisualizer\\src\\App\\App.js",["81"],[],"C:\\Users\\bryce\\Documents\\GitHub\\beatvisualizer\\src\\SearchBar\\SearchBar.js",[],[],"C:\\Users\\bryce\\Documents\\GitHub\\beatvisualizer\\src\\VideoPlayer\\VideoPlayer.js",["82","83"],[],"C:\\Users\\bryce\\Documents\\GitHub\\beatvisualizer\\src\\Spotify\\Spotify.js",["84","85","86","87","88"],[],"C:\\Users\\bryce\\Documents\\GitHub\\beatvisualizer\\src\\Metronome\\Metronome.js",["89","90"],[],{"ruleId":"91","severity":1,"message":"92","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":20},{"ruleId":"91","severity":1,"message":"95","line":1,"column":27,"nodeType":"93","messageId":"94","endLine":1,"endColumn":38},{"ruleId":"96","severity":1,"message":"97","line":17,"column":29,"nodeType":"93","endLine":17,"endColumn":40},{"ruleId":"96","severity":1,"message":"97","line":25,"column":31,"nodeType":"93","endLine":25,"endColumn":42},{"ruleId":"91","severity":1,"message":"98","line":8,"column":12,"nodeType":"93","messageId":"94","endLine":8,"endColumn":15},{"ruleId":"91","severity":1,"message":"99","line":9,"column":12,"nodeType":"93","messageId":"94","endLine":9,"endColumn":17},{"ruleId":"91","severity":1,"message":"100","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":16},{"ruleId":"91","severity":1,"message":"101","line":10,"column":7,"nodeType":"93","messageId":"94","endLine":10,"endColumn":18},{"ruleId":"96","severity":1,"message":"102","line":53,"column":8,"nodeType":"103","endLine":53,"endColumn":24,"suggestions":"104"},{"ruleId":"96","severity":1,"message":"97","line":55,"column":27,"nodeType":"93","endLine":55,"endColumn":38},{"ruleId":"105","severity":1,"message":"106","line":124,"column":17,"nodeType":"107","endLine":124,"endColumn":21},{"ruleId":"91","severity":1,"message":"92","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":20},{"ruleId":"91","severity":1,"message":"95","line":1,"column":27,"nodeType":"93","messageId":"94","endLine":1,"endColumn":38},{"ruleId":"91","severity":1,"message":"98","line":8,"column":12,"nodeType":"93","messageId":"94","endLine":8,"endColumn":15},{"ruleId":"91","severity":1,"message":"99","line":9,"column":12,"nodeType":"93","messageId":"94","endLine":9,"endColumn":17},{"ruleId":"91","severity":1,"message":"100","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":16},{"ruleId":"91","severity":1,"message":"101","line":10,"column":7,"nodeType":"93","messageId":"94","endLine":10,"endColumn":18},{"ruleId":"96","severity":1,"message":"102","line":53,"column":8,"nodeType":"103","endLine":53,"endColumn":24,"suggestions":"108"},{"ruleId":"96","severity":1,"message":"97","line":55,"column":27,"nodeType":"93","endLine":55,"endColumn":38},{"ruleId":"105","severity":1,"message":"106","line":124,"column":17,"nodeType":"107","endLine":124,"endColumn":21},{"ruleId":"96","severity":1,"message":"97","line":17,"column":29,"nodeType":"93","endLine":17,"endColumn":40},{"ruleId":"96","severity":1,"message":"97","line":25,"column":31,"nodeType":"93","endLine":25,"endColumn":42},"no-unused-vars","'createRoot' is defined but never used.","Identifier","unusedVar","'useCallback' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'bpm' is assigned a value but never used.","'delay' is assigned a value but never used.","'Buffer' is defined but never used.","'redirectUri' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'getResults'. Either include it or remove the dependency array.","ArrayExpression",["109"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement",["110"],{"desc":"111","fix":"112"},{"desc":"111","fix":"113"},"Update the dependencies array to be: [getResults, onSearch, term]",{"range":"114","text":"115"},{"range":"116","text":"115"},[1599,1615],"[getResults, onSearch, term]",[1599,1615]]